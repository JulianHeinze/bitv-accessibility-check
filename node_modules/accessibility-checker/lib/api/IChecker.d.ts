import { eRuleLevel } from "../common/config/IConfig.js";
import { IBaselineReport } from "../common/engine/IReport.js";
export declare enum eAssertResult {
    ERROR = -1,
    PASS = 0,
    BASELINE_MISMATCH = 1,
    FAIL = 2
}
export interface ILogger {
    debug: (...args: any[]) => void;
    info: (...args: any[]) => void;
    error: (...args: any[]) => void;
    warn: (...args: any[]) => void;
    create: (...args: any[]) => void;
}
export interface ICheckerError {
    details: any;
}
export interface ICheckerResult {
    webdriver?: any;
    puppeteer?: any;
    report: ReportResult;
}
export type ICheckerReportCounts = {
    [key in eRuleLevel]?: number;
};
export type ICheckerReport = IBaselineReport;
export type ReportResult = ICheckerReport | ICheckerError;
